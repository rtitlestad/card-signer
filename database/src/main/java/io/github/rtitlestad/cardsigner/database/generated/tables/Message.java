/**
 * This class is generated by jOOQ
 */
package io.github.rtitlestad.cardsigner.database.generated.tables;


import io.github.rtitlestad.cardsigner.database.generated.Keys;
import io.github.rtitlestad.cardsigner.database.generated.Public;
import io.github.rtitlestad.cardsigner.database.generated.tables.records.MessageRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Message extends TableImpl<MessageRecord> {

	private static final long serialVersionUID = -1715943402;

	/**
	 * The reference instance of <code>PUBLIC.MESSAGE</code>
	 */
	public static final Message MESSAGE = new Message();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MessageRecord> getRecordType() {
		return MessageRecord.class;
	}

	/**
	 * The column <code>PUBLIC.MESSAGE.ID</code>.
	 */
	public final TableField<MessageRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>PUBLIC.MESSAGE.TEXT</code>.
	 */
	public final TableField<MessageRecord, String> TEXT = createField("TEXT", org.jooq.impl.SQLDataType.VARCHAR.length(2147483647), this, "");

	/**
	 * The column <code>PUBLIC.MESSAGE.CARD_ID</code>.
	 */
	public final TableField<MessageRecord, Integer> CARD_ID = createField("CARD_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>PUBLIC.MESSAGE</code> table reference
	 */
	public Message() {
		this("MESSAGE", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.MESSAGE</code> table reference
	 */
	public Message(String alias) {
		this(alias, MESSAGE);
	}

	private Message(String alias, Table<MessageRecord> aliased) {
		this(alias, aliased, null);
	}

	private Message(String alias, Table<MessageRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MessageRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MESSAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MessageRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_6;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MessageRecord>> getKeys() {
		return Arrays.<UniqueKey<MessageRecord>>asList(Keys.CONSTRAINT_6);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<MessageRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<MessageRecord, ?>>asList(Keys.CONSTRAINT_63);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Message as(String alias) {
		return new Message(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Message rename(String name) {
		return new Message(name, null);
	}
}
