/**
 * This class is generated by jOOQ
 */
package io.github.rtitlestad.cardsigner.database.generated.tables;


import io.github.rtitlestad.cardsigner.database.generated.Keys;
import io.github.rtitlestad.cardsigner.database.generated.Public;
import io.github.rtitlestad.cardsigner.database.generated.tables.records.CardRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Card extends TableImpl<CardRecord> {

	private static final long serialVersionUID = 2008262658;

	/**
	 * The reference instance of <code>PUBLIC.CARD</code>
	 */
	public static final Card CARD = new Card();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CardRecord> getRecordType() {
		return CardRecord.class;
	}

	/**
	 * The column <code>PUBLIC.CARD.ID</code>.
	 */
	public final TableField<CardRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>PUBLIC.CARD.DESCRIPTION</code>.
	 */
	public final TableField<CardRecord, String> DESCRIPTION = createField("DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR.length(2147483647), this, "");

	/**
	 * Create a <code>PUBLIC.CARD</code> table reference
	 */
	public Card() {
		this("CARD", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.CARD</code> table reference
	 */
	public Card(String alias) {
		this(alias, CARD);
	}

	private Card(String alias, Table<CardRecord> aliased) {
		this(alias, aliased, null);
	}

	private Card(String alias, Table<CardRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CardRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CARD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CardRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_1;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CardRecord>> getKeys() {
		return Arrays.<UniqueKey<CardRecord>>asList(Keys.CONSTRAINT_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Card as(String alias) {
		return new Card(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Card rename(String name) {
		return new Card(name, null);
	}
}
